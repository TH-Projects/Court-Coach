#pragma checksum "C:\Users\Timo Heckmann\Documents\GithubLocal\CourtCoach\CourtCoach\Shooting.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "3AF20FF39152611DEEFD4C769E13305E35006D845D0A21862742C1D9BC306EC6"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CourtCoach
{
    partial class Shooting : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Shooting.xaml line 12
                {
                    this.MainBG = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 3: // Shooting.xaml line 81
                {
                    this.uc_saveSession = (global::CourtCoach.ResponsiveButton)(target);
                    ((global::CourtCoach.ResponsiveButton)this.uc_saveSession).OnClick += this.uc_saveSession_OnClick;
                }
                break;
            case 4: // Shooting.xaml line 76
                {
                    this.uc_startSession = (global::CourtCoach.ResponsiveButton)(target);
                    ((global::CourtCoach.ResponsiveButton)this.uc_startSession).OnClick += this.uc_startSession_OnClick;
                }
                break;
            case 5: // Shooting.xaml line 73
                {
                    this.ThreePointRate = (global::CourtCoach.ResponsiveTextBlock)(target);
                }
                break;
            case 6: // Shooting.xaml line 70
                {
                    this.TwoPointRate = (global::CourtCoach.ResponsiveTextBlock)(target);
                }
                break;
            case 7: // Shooting.xaml line 67
                {
                    this.FreethrowRate = (global::CourtCoach.ResponsiveTextBlock)(target);
                }
                break;
            case 8: // Shooting.xaml line 62
                {
                    this.uc_ThreePointMiss = (global::CourtCoach.ResponsiveButton)(target);
                    ((global::CourtCoach.ResponsiveButton)this.uc_ThreePointMiss).OnClick += this.uc_ThreePointMiss_OnClick;
                }
                break;
            case 9: // Shooting.xaml line 57
                {
                    this.uc_TwoPointMiss = (global::CourtCoach.ResponsiveButton)(target);
                    ((global::CourtCoach.ResponsiveButton)this.uc_TwoPointMiss).OnClick += this.uc_TwoPointMiss_OnClick;
                }
                break;
            case 10: // Shooting.xaml line 52
                {
                    this.uc_FreethrowMiss = (global::CourtCoach.ResponsiveButton)(target);
                    ((global::CourtCoach.ResponsiveButton)this.uc_FreethrowMiss).OnClick += this.uc_FreethrowMiss_OnClick;
                }
                break;
            case 11: // Shooting.xaml line 47
                {
                    this.uc_ThreePointHit = (global::CourtCoach.ResponsiveButton)(target);
                    ((global::CourtCoach.ResponsiveButton)this.uc_ThreePointHit).OnClick += this.uc_ThreePointHit_OnClick;
                }
                break;
            case 12: // Shooting.xaml line 42
                {
                    this.uc_TwoPointHit = (global::CourtCoach.ResponsiveButton)(target);
                    ((global::CourtCoach.ResponsiveButton)this.uc_TwoPointHit).OnClick += this.uc_TwoPointHit_OnClick;
                }
                break;
            case 13: // Shooting.xaml line 37
                {
                    this.uc_FreethrowHit = (global::CourtCoach.ResponsiveButton)(target);
                    ((global::CourtCoach.ResponsiveButton)this.uc_FreethrowHit).OnClick += this.uc_FreethrowHit_OnClick;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            return returnValue;
        }
    }
}

